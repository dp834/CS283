dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ cc g2.c -g
dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ ./a.out
asdf
Segmentation fault (core dumped)
dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ ls
a.out  core  etox.c  etoxGDB  g1.c  g1GDB  g2.c
dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ gdb a.out core
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.

warning: exec file is newer than core file.
[New LWP 10262]
Core was generated by `./a.out'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  __GI__IO_getline_info (eof=0x0, extract_delim=<optimized out>, delim=10, n=1022, buf=0x0, fp=0x7fe2a4e23a00 <_IO_2_1_stdin_>, fp@entry=0x0)
    at iogetline.c:77
	 77      iogetline.c: No such file or directory.
	 (gdb) quit
	 dmp394@tux5 ~/CS283/Git/Labs/1/help/
	 $ echo "from core dump we can see we called __GI__IO_getline_info() with buffer == 0 and eof == NULL"
	 from core dump we can see we called __GI__IO_getline_info() with buffer == 0 and eof == NULL
	 dmp394@tux5 ~/CS283/Git/Labs/1/help/
	 $ echo "Some pointer is not pointing at the right spot, bad malloc?"
	 Some pointer is not pointing at the right spot, bad malloc?
	 dmp394@tux5 ~/CS283/Git/Labs/1/help/
	 $ vi g2.c
	 dmp394@tux5 ~/CS283/Git/Labs/1/help/
	 $ gdb a.out
	 GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
	 Copyright (C) 2018 Free Software Foundation, Inc.
	 License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
	 This is free software: you are free to change and redistribute it.
	 There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
	 and "show warranty" for details.
	 This GDB was configured as "x86_64-linux-gnu".
	 Type "show configuration" for configuration details.
	 For bug reporting instructions, please see:
	 <http://www.gnu.org/software/gdb/bugs/>.
	 Find the GDB manual and other documentation resources online at:
	 <http://www.gnu.org/software/gdb/documentation/>.
	 For help, type "help".
	 Type "apropos word" to search for commands related to "word"...
	 Reading symbols from a.out...done.
	 (gdb) break main
	 Breakpoint 1 at 0x722: file g2.c, line 8.
	 (gdb) l
	 warning: Source file is more recent than executable.
	 1       #include <stdio.h>
	 2       #include <stdlib.h>
	 3
	 4       int main ()
	 5        {
		6         char * buf;
		7         int num;
		8         num = 1 << 31;
		9         buf = malloc(num) ;
		10        fgets (buf, 1024, stdin) ;
		(gdb) display num
		No symbol "num" in current context.
		(gdb) run
		Starting program: /home2/home-d/dmp394/CS283/Git/Labs/1/help/a.out

		Breakpoint 1, main () at g2.c:8
		8         num = 1 << 31;
		(gdb) display num
		1: num = 32767
		(gdb) display buf
		2: buf = 0x0
		(gdb) n
		9         buf = malloc(num) ;
		1: num = -2147483648
		2: buf = 0x0
		(gdb) n
		10        fgets (buf, 1024, stdin) ;
		1: num = -2147483648
		2: buf = 0x0
		(gdb) quit
		A debugging session is active.

		        Inferior 1 [process 10739] will be killed.

				  Quit anyway? (y or n) y
				  dmp394@tux5 ~/CS283/Git/Labs/1/help/
				  $ echo "we see that num is negative and calling malloc with negative is a no no so we get a nullptr back"
				  we see that num is negative and calling malloc with negative is a no no so we get a nullptr back
				  dmp394@tux5 ~/CS283/Git/Labs/1/help/
				  $ vi
				  dmp394@tux5 ~/CS283/Git/Labs/1/help/
				  $ echo "looks like it leftshifts one too far"
				  looks like it leftshifts one too far
				  dmp394@tux5 ~/CS283/Git/Labs/1/help/
				  $ vi g2.c
				  dmp394@tux5 ~/CS283/Git/Labs/1/help/
				  $ cc g2.c
				  dmp394@tux5 ~/CS283/Git/Labs/1/help/
				  $ ./a.out
				  asdf
				  asdf

