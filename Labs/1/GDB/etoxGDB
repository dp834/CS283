Note program doesn't have error checking for larger values of x


dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ cc -g etox.c
dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ ./a.out
This program calculates e^x
using sum of (x^k)/k!
Enter x, n : 1 100
x,n =   1.0000  100
e^x =            inf
dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ echo "Should be getting approx for e"
Should be getting approx for e
dmp394@tux5 ~/CS283/Git/Labs/1/help/
$ gdb a.out
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) break main
Breakpoint 1 at 0x772: file etox.c, line 7.
(gdb) list
1       #include <stdio.h>
2
3       double getvalue (double, int);
4       int factorial (int);
5
6       int main ()
7        {
	8         int n;
	9         double x;
	10        double series;
	(gdb) n
	The program is not being run.
	(gdb) run
	Starting program: /home2/home-d/dmp394/CS283/Git/Labs/1/help/a.out

	Breakpoint 1, main () at etox.c:7
	7        {
		(gdb) list
		2
		3       double getvalue (double, int);
		4       int factorial (int);
		5
		6       int main ()
		7        {
			8         int n;
			9         double x;
			10        double series;
			11
			(gdb) n
			12        printf("This program calculates e^x\n");
			(gdb) n
			This program calculates e^x
			13        printf("using sum of (x^k)/k!\n");
			(gdb) n
			using sum of (x^k)/k!
			14        printf("Enter x, n : ");
			(gdb) n
			16        scanf("%lf%d",&x,&n);
			(gdb) n
			Enter x, n : 17   printf("x,n = %8.4lf %4d\n",x,n);
			(gdb) n
			x,n =   0.0000 21845
			19        series = getvalue(x,n);
			(gdb) n
			20        printf("e^x = %14.10lf\n",series);
			(gdb) n
			e^x =           -nan
			22        return(0);
			(gdb) n
			23       }
			(gdb)
			__libc_start_main (main=0x55555555476a <main>, argc=1, argv=0x7fffffffe398, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>,
			    stack_end=0x7fffffffe388) at ../csu/libc-start.c:344
				 344     ../csu/libc-start.c: No such file or directory.
				 (gdb) n
				 [Inferior 1 (process 10462) exited normally]
				 (gdb) run
				 Starting program: /home2/home-d/dmp394/CS283/Git/Labs/1/help/a.out

				 Breakpoint 1, main () at etox.c:7
				 7        {
					(gdb) n
					12        printf("This program calculates e^x\n");
					(gdb) n
					This program calculates e^x
					13        printf("using sum of (x^k)/k!\n");
					(gdb) n
					using sum of (x^k)/k!
					14        printf("Enter x, n : ");
					(gdb) n
					16        scanf("%lf%d",&x,&n);
					(gdb) n
					Enter x, n : 1 100
					17        printf("x,n = %8.4lf %4d\n",x,n);
					(gdb) n
					x,n =   1.0000  100
					19        series = getvalue(x,n);
					(gdb) n
					20        printf("e^x = %14.10lf\n",series);
					(gdb) n
					e^x =            inf
					22        return(0);
					(gdb) n
					23       }
					(gdb) run
					The program being debugged has been started already.
					Start it from the beginning? (y or n) y
					Starting program: /home2/home-d/dmp394/CS283/Git/Labs/1/help/a.out

					Breakpoint 1, main () at etox.c:7
					7        {
						(gdb) n
						12        printf("This program calculates e^x\n");
						(gdb) n
						This program calculates e^x
						13        printf("using sum of (x^k)/k!\n");
						(gdb) n
						using sum of (x^k)/k!
						14        printf("Enter x, n : ");
						(gdb) n
						16        scanf("%lf%d",&x,&n);
						(gdb) n
						Enter x, n : 1 100
						17        printf("x,n = %8.4lf %4d\n",x,n);
						(gdb) s
						__printf (format=0x5555555549be "x,n = %8.4lf %4d\n") at printf.c:28
						28      printf.c: No such file or directory.
						(gdb) s
						32      in printf.c
						(gdb) n
						33      in printf.c
						(gdb) n
						32      in printf.c
						(gdb) n
						33      in printf.c
						(gdb) s
						_IO_vfprintf_internal (s=0x7ffff7dd0760 <_IO_2_1_stdout_>, format=0x5555555549be "x,n = %8.4lf %4d\n", ap=ap@entry=0x7fffffffe1a0) at vfprintf.c:1244
						1244    vfprintf.c: No such file or directory.
						(gdb) s
						1275    in vfprintf.c
						(gdb) s
						1283    in vfprintf.c
						(gdb) s
						1287    in vfprintf.c
						(gdb) n
						1298    in vfprintf.c
						(gdb) n
						1309    in vfprintf.c
						(gdb) n
						1320    in vfprintf.c
						(gdb) ns
						Undefined command: "ns".  Try "help".
						(gdb) n
						1309    in vfprintf.c
						(gdb) s
						1320    in vfprintf.c
						(gdb) q
						A debugging session is active.

						        Inferior 1 [process 10469] will be killed.

								  Quit anyway? (y or n) n
								  Not confirmed.
								  (gdb) run
								  The program being debugged has been started already.
								  Start it from the beginning? (y or n) y
								  Starting program: /home2/home-d/dmp394/CS283/Git/Labs/1/help/a.out

								  Breakpoint 1, main () at etox.c:7
								  7        {
									(gdb) n
									12        printf("This program calculates e^x\n");
									(gdb) n
									This program calculates e^x
									13        printf("using sum of (x^k)/k!\n");
									(gdb) n
									using sum of (x^k)/k!
									14        printf("Enter x, n : ");
									(gdb) n
									16        scanf("%lf%d",&x,&n);
									(gdb) n
									Enter x, n : 1 100
									17        printf("x,n = %8.4lf %4d\n",x,n);
									(gdb) n
									x,n =   1.0000  100
									19        series = getvalue(x,n);
									(gdb) s
									getvalue (x=1, n=100) at etox.c:30
									30        double value = 0.0;
									(gdb) list
									25      double getvalue (x,n)
									26      double x;
									27      int n;
									28       {
										29        int k;
										30        double value = 0.0;
										31        double xpow = 1.0;
										32        for (k = 0; k <= n; k++)
										33         {
											34          value += xpow / factorial(k);
											(gdb) p value
											$1 = 8.4879831658373518e-314
											(gdb) xpow
											Undefined command: "xpow".  Try "help".
											(gdb) p xpow
											$2 = 8.4879831658373518e-314
											(gdb) n
											31        double xpow = 1.0;
											(gdb) n
											32        for (k = 0; k <= n; k++)
											(gdb) display value
											1: value = 0
											(gdb) display xpow
											2: xpow = 1
											(gdb) display k
											3: k = -1
											(gdb) n
											34          value += xpow / factorial(k);
											1: value = 0
											2: xpow = 1
											3: k = 0
											(gdb) s
											factorial (number=0) at etox.c:44
											44        int fact = 0;
											(gdb) list
											39
											40      int factorial (number)
											41      int number;
											42       {
												43        int j;
												44        int fact = 0;
												45
												46        for (j = 1; j <= number; j++)
												47         {
													48          fact = fact * j;
													(gdb) n
													46        for (j = 1; j <= number; j++)
													(gdb) display fact
													4: fact = 0
													(gdb) display j
													5: j = 0
													(gdb) n
													51        return(fact);
													4: fact = 0
													5: j = 1
													(gdb) n
													52       }
													4: fact = 0
													5: j = 1
													(gdb) n
													getvalue (x=1, n=100) at etox.c:35
													35          xpow = xpow * x;
													1: value = inf
													2: xpow = 1
													3: k = 0
													(gdb) n
													32        for (k = 0; k <= n; k++)
													1: value = inf
													2: xpow = 1
													3: k = 0
													(gdb) q
													A debugging session is active.

													        Inferior 1 [process 10470] will be killed.

															  Quit anyway? (y or n) y
															  dmp394@tux5 ~/CS283/Git/Labs/1/help/
															  $ echo "fact returning zero for zero, initialized incorrectly"
															  fact returning zero for zero, initialized incorrectly
